name: Build curated targets against WASIX

on:
  - push
  - pull_request
  - workflow_dispatch

permissions:
  contents: read
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
      options: --user root --workdir /
    steps:
      - name: Update and install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -Sy --noconfirm coreutils nodejs npm wget git cmake mesa ninja llvm clang rsync cargo rust lld unzip make wasmer tmux

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Git config
        run: |
          git config --global user.email "builder@nothing.com"
          git config --global user.name "Builder"
          git config --global --add safe.directory /__w/qt-wasix/qt-wasix
          if [ -z "$(git remote -v | grep origin)" ]; then
             git remote add origin https://github.com/SanderVocke/qt-wasix.git
          fi
          git fetch origin original

      - name: Submodules
        run: |
          git submodule init -- qtbase
          git submodule init -- qtdeclarative
          git submodule update
      
      - name: Install WASI SDK
        run: |
          wget https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-20/wasi-sdk-20.0-linux.tar.gz -O wasi-sdk.tar.gz
          rm -rf /opt/wasi-sdk
          tar -xvf wasi-sdk.tar.gz -C /opt

      # - name: Install builtins
      #   run: |
      #     export CLANG_MAJOR=$(clang --version | grep "clang version" | sed -r 's/.*version[ ]*([0-9]+).*/\1/')
      #     mkdir -p /usr/lib/clang/16/lib/wasi
      #     cp /opt/wasix-sysroot/lib/wasm32-wasi/libclang_rt.builtins-wasm32.a /usr/lib/clang/16/lib/wasi/

      - name: Cache load Qt host build
        uses: actions/cache/restore@v3
        id: cache-qt-build-host
        if: ${{ !env.ACT }}
        with:
          path: /opt/qt6
          key: qt6-build-host-${{ github.sha }}-2

      - name: Configure Qt6 (host)
        if: steps.cache-qt-build-host.outputs.cache-hit != 'true'
        run: |
          git clone . hostsrc
          mkdir -p qt6-build-host
          cd hostsrc
          git remote rename origin local
          git remote add github https://github.com/SanderVocke/qt-wasix.git
          git remote add origin https://github.com/qt/qt5.git
          git fetch github original
          git checkout github/original
          ./init-repository --module-subset="qtbase,qtdeclarative"
          cd ../qt6-build-host && ../hostsrc/configure -prefix /opt/qt6 -shared -no-opengl
      
      - name: Build and install Qt6 (host)
        if: steps.cache-qt-build-host.outputs.cache-hit != 'true'
        run: |
          cd qt6-build-host && cmake --build . --parallel 4
          cmake --install .
          rm -rf ../hostsrc
      
      - name: Cache save Qt host build
        uses: actions/cache/save@v3
        id: cache-save-qt-build-host
        if: ${{ !env.ACT }}
        with:
          path: /opt/qt6
          key: qt6-build-host-${{ github.sha }}-2

      - name: Configure Qt6 (WASI)
        run: >
          mkdir -p qt6-build &&
          cd qt6-build &&
          export COMPILEFLAGS="-D__linux__ -DQT_NO_VERSION_TAGGING -DQT_NO_EXCEPTIONS -I$(pwd)/../qtbase/mkspecs/common/posix -D_WASI_EMULATED_PROCESS_CLOCKS -DQT_LINUXBASE -DWASIX --sysroot=/opt/wasi-sdk-20/share-wasi-sysroot" &&
          ../configure -prefix /opt/qt6-wasm -static -no-opengl -platform unsupported -qt-host-path /opt/qt6 -no-feature-brotli -no-feature-qml-network -no-feature-networkproxy -no-feature-networkinterface -no-feature-networklistmanager -no-feature-evdev -no-feature-topleveldomain -no-feature-linux-netlink -no-feature-dnslookup -no-feature-networkdiskcache -no-feature-library -no-feature-localserver -no-feature-libudev -- --fresh -DCMAKE_TOOLCHAIN_FILE=/opt/wasi-sdk-20/share/cmake/wasi-sdk-pthread.cmake -DCMAKE_SYSROOT=/opt/wasi-sdk-20/share-wasi-sysroot -DCMAKE_CXX_FLAGS="$COMPILEFLAGS" -DCMAKE_C_FLAGS="$COMPILEFLAGS" -DUNIX=1 -DQT_FORCE_BUILD_TOOLS=OFF
      
      - name: Build Qt6 (WASI)
        run: |
          cd qt6-build
          cmake --build . --parallel 4 --target libQt6Core.a qmldom
     
      - name: Upload
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v2
        with:
          name: qt6-wasi
          path: qt6-build

            
